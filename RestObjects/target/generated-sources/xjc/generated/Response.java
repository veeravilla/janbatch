//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.02.16 at 04:41:19 PM CST 
//


package generated;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="IP" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="CountryCode" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="CountryName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="RegionCode" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="RegionName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="City" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="ZipCode" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="TimeZone" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="Latitude" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="Longitude" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="MetroCode" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "ip",
    "countryCode",
    "countryName",
    "regionCode",
    "regionName",
    "city",
    "zipCode",
    "timeZone",
    "latitude",
    "longitude",
    "metroCode"
})
@XmlRootElement(name = "Response")
public class Response implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "IP", required = true)
    protected String ip;
    @XmlElement(name = "CountryCode", required = true)
    protected String countryCode;
    @XmlElement(name = "CountryName", required = true)
    protected String countryName;
    @XmlElement(name = "RegionCode", required = true)
    protected String regionCode;
    @XmlElement(name = "RegionName", required = true)
    protected String regionName;
    @XmlElement(name = "City", required = true)
    protected String city;
    @XmlElement(name = "ZipCode", required = true)
    protected String zipCode;
    @XmlElement(name = "TimeZone", required = true)
    protected String timeZone;
    @XmlElement(name = "Latitude", required = true)
    protected String latitude;
    @XmlElement(name = "Longitude", required = true)
    protected String longitude;
    @XmlElement(name = "MetroCode", required = true)
    protected String metroCode;

    /**
     * Default no-arg constructor
     * 
     */
    public Response() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public Response(final String ip, final String countryCode, final String countryName, final String regionCode, final String regionName, final String city, final String zipCode, final String timeZone, final String latitude, final String longitude, final String metroCode) {
        this.ip = ip;
        this.countryCode = countryCode;
        this.countryName = countryName;
        this.regionCode = regionCode;
        this.regionName = regionName;
        this.city = city;
        this.zipCode = zipCode;
        this.timeZone = timeZone;
        this.latitude = latitude;
        this.longitude = longitude;
        this.metroCode = metroCode;
    }

    /**
     * Gets the value of the ip property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIP() {
        return ip;
    }

    /**
     * Sets the value of the ip property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIP(String value) {
        this.ip = value;
    }

    /**
     * Gets the value of the countryCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCountryCode() {
        return countryCode;
    }

    /**
     * Sets the value of the countryCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCountryCode(String value) {
        this.countryCode = value;
    }

    /**
     * Gets the value of the countryName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCountryName() {
        return countryName;
    }

    /**
     * Sets the value of the countryName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCountryName(String value) {
        this.countryName = value;
    }

    /**
     * Gets the value of the regionCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRegionCode() {
        return regionCode;
    }

    /**
     * Sets the value of the regionCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRegionCode(String value) {
        this.regionCode = value;
    }

    /**
     * Gets the value of the regionName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRegionName() {
        return regionName;
    }

    /**
     * Sets the value of the regionName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRegionName(String value) {
        this.regionName = value;
    }

    /**
     * Gets the value of the city property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCity() {
        return city;
    }

    /**
     * Sets the value of the city property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCity(String value) {
        this.city = value;
    }

    /**
     * Gets the value of the zipCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getZipCode() {
        return zipCode;
    }

    /**
     * Sets the value of the zipCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setZipCode(String value) {
        this.zipCode = value;
    }

    /**
     * Gets the value of the timeZone property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTimeZone() {
        return timeZone;
    }

    /**
     * Sets the value of the timeZone property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTimeZone(String value) {
        this.timeZone = value;
    }

    /**
     * Gets the value of the latitude property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLatitude() {
        return latitude;
    }

    /**
     * Sets the value of the latitude property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLatitude(String value) {
        this.latitude = value;
    }

    /**
     * Gets the value of the longitude property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLongitude() {
        return longitude;
    }

    /**
     * Sets the value of the longitude property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLongitude(String value) {
        this.longitude = value;
    }

    /**
     * Gets the value of the metroCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMetroCode() {
        return metroCode;
    }

    /**
     * Sets the value of the metroCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMetroCode(String value) {
        this.metroCode = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theIP;
            theIP = this.getIP();
            strategy.appendField(locator, this, "ip", buffer, theIP);
        }
        {
            String theCountryCode;
            theCountryCode = this.getCountryCode();
            strategy.appendField(locator, this, "countryCode", buffer, theCountryCode);
        }
        {
            String theCountryName;
            theCountryName = this.getCountryName();
            strategy.appendField(locator, this, "countryName", buffer, theCountryName);
        }
        {
            String theRegionCode;
            theRegionCode = this.getRegionCode();
            strategy.appendField(locator, this, "regionCode", buffer, theRegionCode);
        }
        {
            String theRegionName;
            theRegionName = this.getRegionName();
            strategy.appendField(locator, this, "regionName", buffer, theRegionName);
        }
        {
            String theCity;
            theCity = this.getCity();
            strategy.appendField(locator, this, "city", buffer, theCity);
        }
        {
            String theZipCode;
            theZipCode = this.getZipCode();
            strategy.appendField(locator, this, "zipCode", buffer, theZipCode);
        }
        {
            String theTimeZone;
            theTimeZone = this.getTimeZone();
            strategy.appendField(locator, this, "timeZone", buffer, theTimeZone);
        }
        {
            String theLatitude;
            theLatitude = this.getLatitude();
            strategy.appendField(locator, this, "latitude", buffer, theLatitude);
        }
        {
            String theLongitude;
            theLongitude = this.getLongitude();
            strategy.appendField(locator, this, "longitude", buffer, theLongitude);
        }
        {
            String theMetroCode;
            theMetroCode = this.getMetroCode();
            strategy.appendField(locator, this, "metroCode", buffer, theMetroCode);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Response)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Response that = ((Response) object);
        {
            String lhsIP;
            lhsIP = this.getIP();
            String rhsIP;
            rhsIP = that.getIP();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ip", lhsIP), LocatorUtils.property(thatLocator, "ip", rhsIP), lhsIP, rhsIP)) {
                return false;
            }
        }
        {
            String lhsCountryCode;
            lhsCountryCode = this.getCountryCode();
            String rhsCountryCode;
            rhsCountryCode = that.getCountryCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countryCode", lhsCountryCode), LocatorUtils.property(thatLocator, "countryCode", rhsCountryCode), lhsCountryCode, rhsCountryCode)) {
                return false;
            }
        }
        {
            String lhsCountryName;
            lhsCountryName = this.getCountryName();
            String rhsCountryName;
            rhsCountryName = that.getCountryName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "countryName", lhsCountryName), LocatorUtils.property(thatLocator, "countryName", rhsCountryName), lhsCountryName, rhsCountryName)) {
                return false;
            }
        }
        {
            String lhsRegionCode;
            lhsRegionCode = this.getRegionCode();
            String rhsRegionCode;
            rhsRegionCode = that.getRegionCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "regionCode", lhsRegionCode), LocatorUtils.property(thatLocator, "regionCode", rhsRegionCode), lhsRegionCode, rhsRegionCode)) {
                return false;
            }
        }
        {
            String lhsRegionName;
            lhsRegionName = this.getRegionName();
            String rhsRegionName;
            rhsRegionName = that.getRegionName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "regionName", lhsRegionName), LocatorUtils.property(thatLocator, "regionName", rhsRegionName), lhsRegionName, rhsRegionName)) {
                return false;
            }
        }
        {
            String lhsCity;
            lhsCity = this.getCity();
            String rhsCity;
            rhsCity = that.getCity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "city", lhsCity), LocatorUtils.property(thatLocator, "city", rhsCity), lhsCity, rhsCity)) {
                return false;
            }
        }
        {
            String lhsZipCode;
            lhsZipCode = this.getZipCode();
            String rhsZipCode;
            rhsZipCode = that.getZipCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "zipCode", lhsZipCode), LocatorUtils.property(thatLocator, "zipCode", rhsZipCode), lhsZipCode, rhsZipCode)) {
                return false;
            }
        }
        {
            String lhsTimeZone;
            lhsTimeZone = this.getTimeZone();
            String rhsTimeZone;
            rhsTimeZone = that.getTimeZone();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timeZone", lhsTimeZone), LocatorUtils.property(thatLocator, "timeZone", rhsTimeZone), lhsTimeZone, rhsTimeZone)) {
                return false;
            }
        }
        {
            String lhsLatitude;
            lhsLatitude = this.getLatitude();
            String rhsLatitude;
            rhsLatitude = that.getLatitude();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "latitude", lhsLatitude), LocatorUtils.property(thatLocator, "latitude", rhsLatitude), lhsLatitude, rhsLatitude)) {
                return false;
            }
        }
        {
            String lhsLongitude;
            lhsLongitude = this.getLongitude();
            String rhsLongitude;
            rhsLongitude = that.getLongitude();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "longitude", lhsLongitude), LocatorUtils.property(thatLocator, "longitude", rhsLongitude), lhsLongitude, rhsLongitude)) {
                return false;
            }
        }
        {
            String lhsMetroCode;
            lhsMetroCode = this.getMetroCode();
            String rhsMetroCode;
            rhsMetroCode = that.getMetroCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "metroCode", lhsMetroCode), LocatorUtils.property(thatLocator, "metroCode", rhsMetroCode), lhsMetroCode, rhsMetroCode)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theIP;
            theIP = this.getIP();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ip", theIP), currentHashCode, theIP);
        }
        {
            String theCountryCode;
            theCountryCode = this.getCountryCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryCode", theCountryCode), currentHashCode, theCountryCode);
        }
        {
            String theCountryName;
            theCountryName = this.getCountryName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryName", theCountryName), currentHashCode, theCountryName);
        }
        {
            String theRegionCode;
            theRegionCode = this.getRegionCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "regionCode", theRegionCode), currentHashCode, theRegionCode);
        }
        {
            String theRegionName;
            theRegionName = this.getRegionName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "regionName", theRegionName), currentHashCode, theRegionName);
        }
        {
            String theCity;
            theCity = this.getCity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "city", theCity), currentHashCode, theCity);
        }
        {
            String theZipCode;
            theZipCode = this.getZipCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "zipCode", theZipCode), currentHashCode, theZipCode);
        }
        {
            String theTimeZone;
            theTimeZone = this.getTimeZone();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timeZone", theTimeZone), currentHashCode, theTimeZone);
        }
        {
            String theLatitude;
            theLatitude = this.getLatitude();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "latitude", theLatitude), currentHashCode, theLatitude);
        }
        {
            String theLongitude;
            theLongitude = this.getLongitude();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "longitude", theLongitude), currentHashCode, theLongitude);
        }
        {
            String theMetroCode;
            theMetroCode = this.getMetroCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "metroCode", theMetroCode), currentHashCode, theMetroCode);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof Response) {
            final Response copy = ((Response) draftCopy);
            if (this.ip!= null) {
                String sourceIP;
                sourceIP = this.getIP();
                String copyIP = ((String) strategy.copy(LocatorUtils.property(locator, "ip", sourceIP), sourceIP));
                copy.setIP(copyIP);
            } else {
                copy.ip = null;
            }
            if (this.countryCode!= null) {
                String sourceCountryCode;
                sourceCountryCode = this.getCountryCode();
                String copyCountryCode = ((String) strategy.copy(LocatorUtils.property(locator, "countryCode", sourceCountryCode), sourceCountryCode));
                copy.setCountryCode(copyCountryCode);
            } else {
                copy.countryCode = null;
            }
            if (this.countryName!= null) {
                String sourceCountryName;
                sourceCountryName = this.getCountryName();
                String copyCountryName = ((String) strategy.copy(LocatorUtils.property(locator, "countryName", sourceCountryName), sourceCountryName));
                copy.setCountryName(copyCountryName);
            } else {
                copy.countryName = null;
            }
            if (this.regionCode!= null) {
                String sourceRegionCode;
                sourceRegionCode = this.getRegionCode();
                String copyRegionCode = ((String) strategy.copy(LocatorUtils.property(locator, "regionCode", sourceRegionCode), sourceRegionCode));
                copy.setRegionCode(copyRegionCode);
            } else {
                copy.regionCode = null;
            }
            if (this.regionName!= null) {
                String sourceRegionName;
                sourceRegionName = this.getRegionName();
                String copyRegionName = ((String) strategy.copy(LocatorUtils.property(locator, "regionName", sourceRegionName), sourceRegionName));
                copy.setRegionName(copyRegionName);
            } else {
                copy.regionName = null;
            }
            if (this.city!= null) {
                String sourceCity;
                sourceCity = this.getCity();
                String copyCity = ((String) strategy.copy(LocatorUtils.property(locator, "city", sourceCity), sourceCity));
                copy.setCity(copyCity);
            } else {
                copy.city = null;
            }
            if (this.zipCode!= null) {
                String sourceZipCode;
                sourceZipCode = this.getZipCode();
                String copyZipCode = ((String) strategy.copy(LocatorUtils.property(locator, "zipCode", sourceZipCode), sourceZipCode));
                copy.setZipCode(copyZipCode);
            } else {
                copy.zipCode = null;
            }
            if (this.timeZone!= null) {
                String sourceTimeZone;
                sourceTimeZone = this.getTimeZone();
                String copyTimeZone = ((String) strategy.copy(LocatorUtils.property(locator, "timeZone", sourceTimeZone), sourceTimeZone));
                copy.setTimeZone(copyTimeZone);
            } else {
                copy.timeZone = null;
            }
            if (this.latitude!= null) {
                String sourceLatitude;
                sourceLatitude = this.getLatitude();
                String copyLatitude = ((String) strategy.copy(LocatorUtils.property(locator, "latitude", sourceLatitude), sourceLatitude));
                copy.setLatitude(copyLatitude);
            } else {
                copy.latitude = null;
            }
            if (this.longitude!= null) {
                String sourceLongitude;
                sourceLongitude = this.getLongitude();
                String copyLongitude = ((String) strategy.copy(LocatorUtils.property(locator, "longitude", sourceLongitude), sourceLongitude));
                copy.setLongitude(copyLongitude);
            } else {
                copy.longitude = null;
            }
            if (this.metroCode!= null) {
                String sourceMetroCode;
                sourceMetroCode = this.getMetroCode();
                String copyMetroCode = ((String) strategy.copy(LocatorUtils.property(locator, "metroCode", sourceMetroCode), sourceMetroCode));
                copy.setMetroCode(copyMetroCode);
            } else {
                copy.metroCode = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new Response();
    }

}
