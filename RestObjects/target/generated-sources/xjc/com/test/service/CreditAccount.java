//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.02.16 at 04:41:19 PM CST 
//


package com.test.service;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CreditAccount complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CreditAccount">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="providerName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="MaxBal" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="CurrentBal" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CreditAccount", propOrder = {
    "providerName",
    "maxBal",
    "currentBal"
})
public class CreditAccount implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String providerName;
    @XmlElement(name = "MaxBal")
    protected int maxBal;
    @XmlElement(name = "CurrentBal", required = true)
    protected Object currentBal;

    /**
     * Default no-arg constructor
     * 
     */
    public CreditAccount() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public CreditAccount(final String providerName, final int maxBal, final Object currentBal) {
        this.providerName = providerName;
        this.maxBal = maxBal;
        this.currentBal = currentBal;
    }

    /**
     * Gets the value of the providerName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProviderName() {
        return providerName;
    }

    /**
     * Sets the value of the providerName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProviderName(String value) {
        this.providerName = value;
    }

    /**
     * Gets the value of the maxBal property.
     * 
     */
    public int getMaxBal() {
        return maxBal;
    }

    /**
     * Sets the value of the maxBal property.
     * 
     */
    public void setMaxBal(int value) {
        this.maxBal = value;
    }

    /**
     * Gets the value of the currentBal property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getCurrentBal() {
        return currentBal;
    }

    /**
     * Sets the value of the currentBal property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setCurrentBal(Object value) {
        this.currentBal = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theProviderName;
            theProviderName = this.getProviderName();
            strategy.appendField(locator, this, "providerName", buffer, theProviderName);
        }
        {
            int theMaxBal;
            theMaxBal = this.getMaxBal();
            strategy.appendField(locator, this, "maxBal", buffer, theMaxBal);
        }
        {
            Object theCurrentBal;
            theCurrentBal = this.getCurrentBal();
            strategy.appendField(locator, this, "currentBal", buffer, theCurrentBal);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CreditAccount)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CreditAccount that = ((CreditAccount) object);
        {
            String lhsProviderName;
            lhsProviderName = this.getProviderName();
            String rhsProviderName;
            rhsProviderName = that.getProviderName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "providerName", lhsProviderName), LocatorUtils.property(thatLocator, "providerName", rhsProviderName), lhsProviderName, rhsProviderName)) {
                return false;
            }
        }
        {
            int lhsMaxBal;
            lhsMaxBal = this.getMaxBal();
            int rhsMaxBal;
            rhsMaxBal = that.getMaxBal();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxBal", lhsMaxBal), LocatorUtils.property(thatLocator, "maxBal", rhsMaxBal), lhsMaxBal, rhsMaxBal)) {
                return false;
            }
        }
        {
            Object lhsCurrentBal;
            lhsCurrentBal = this.getCurrentBal();
            Object rhsCurrentBal;
            rhsCurrentBal = that.getCurrentBal();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currentBal", lhsCurrentBal), LocatorUtils.property(thatLocator, "currentBal", rhsCurrentBal), lhsCurrentBal, rhsCurrentBal)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theProviderName;
            theProviderName = this.getProviderName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "providerName", theProviderName), currentHashCode, theProviderName);
        }
        {
            int theMaxBal;
            theMaxBal = this.getMaxBal();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxBal", theMaxBal), currentHashCode, theMaxBal);
        }
        {
            Object theCurrentBal;
            theCurrentBal = this.getCurrentBal();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currentBal", theCurrentBal), currentHashCode, theCurrentBal);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof CreditAccount) {
            final CreditAccount copy = ((CreditAccount) draftCopy);
            if (this.providerName!= null) {
                String sourceProviderName;
                sourceProviderName = this.getProviderName();
                String copyProviderName = ((String) strategy.copy(LocatorUtils.property(locator, "providerName", sourceProviderName), sourceProviderName));
                copy.setProviderName(copyProviderName);
            } else {
                copy.providerName = null;
            }
            int sourceMaxBal;
            sourceMaxBal = this.getMaxBal();
            int copyMaxBal = strategy.copy(LocatorUtils.property(locator, "maxBal", sourceMaxBal), sourceMaxBal);
            copy.setMaxBal(copyMaxBal);
            if (this.currentBal!= null) {
                Object sourceCurrentBal;
                sourceCurrentBal = this.getCurrentBal();
                Object copyCurrentBal = ((Object) strategy.copy(LocatorUtils.property(locator, "currentBal", sourceCurrentBal), sourceCurrentBal));
                copy.setCurrentBal(copyCurrentBal);
            } else {
                copy.currentBal = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new CreditAccount();
    }

}
